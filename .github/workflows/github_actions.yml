name: 'Terraform Check Plan Apply for task 1'

on:
  push:
    branches:
     - main
  pull_request:
    branches:
     - main

permissions:
      id-token: write   
      contents: read    

jobs:
  terraform-check:
    name: 'Terraform Check'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
#      with:
#        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: ./terraform

 #   - name: Terraform Validate
 #     run: terraform validate
 #     working-directory: ./terraform


  terraform-plan:
    name: 'Terraform Plan'
    needs: terraform-check
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubActionsRole
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: eu-west-1
 
    # Hello from AWS: WhoAmI
    - name: Sts GetCallerIdentity
      run: |
          aws sts get-caller-identity
      
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ./terraform

  terraform-apply:
    name: 'Terraform Apply'
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubActionsRole
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: eu-west-1
     # Hello from AWS: WhoAmI
    - name: Sts GetCallerIdentity
      run: |
          aws sts get-caller-identity
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      working-directory: ./terraform 

#    - name: Terraform Destroy
  #    if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
  #    run: terraform destroy -auto-approve -input=false
  #    working-directory: ./terraform
